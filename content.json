{"pages":[{"title":"About Me","text":"iOS Developer Github 项目 掌尚机场 机场达人 党建云 易社区 天房用餐 用车申请 瓜牛钱包 瓜牛钱包－企业版 瓜牛分期 兑啦 中国海关归类化验","link":"/about/index.html"},{"title":"categories","text":"","link":"/categories/index.html"},{"title":"tags","text":"","link":"/tags/index.html"}],"posts":[{"title":"MyHouse-1","text":"把一件事说清楚挺难的。 ###感谢父母新房年前就装修完了，都是父亲给操办的，房子是父亲给的，装修是父亲给装的。一直觉得父亲生活中是比较粗糙的人，但是这次买房装修过程中以及装完的效果，我发现父亲其实是一个特别有品质的老男人，房子中的每一处细节他都想到了并且弄的特别棒。整体风格是普通的不能再普通的风格，但是所有的家具都是实木的，质感特别好，只是善良的老父亲被厂商给坑了一把，家具的味道特别大，并且没有按照我们规定好的样子做。父亲一直说都不容易，差不得就得了，人家也不是故意的。我却不依不饶，一直再找厂家要说法，最后答应了重新给弄。我妈以为我对我爸的眼光不满意，让我将就将就。其实我是觉得委屈，为我爸委屈，这些厂家难道就因为我爸好说话就这样欺负么？所以我才一直不依不饶的找厂家，说好的什么样就要什么样，差一分一毫都不行，这是原则。###购家电这两天周末跑了线下的苏宁把电视、洗衣机、冰箱给买了。装修完了我爸妈就催着我赶紧买家电去，我是觉得过些日子再买，我先了解了解。上周我觉得是时候可以买了，因为我了解差不多了。周六四口人开车就去苏宁了，城乡结合部的环境真的挺差的，谁让咱在农村呢…… 买了个三星的电视，65 的，没买曲面的，因为觉得用处不大。性价比还可以，够我们用了，说是 4K 的，可是现在这机顶盒输出的质量，也没什么大用。买了电视主要也是和老婆看电影，打游戏用。 洗衣机和冰箱都买的是西门子的，老妈和丈母娘都说西门子的不错，我还是觉得性价比高，以后不想用了，直接扔掉再买新的都不心疼，所以就买了下来。当然这都是周六那天四口一起去看了好多款中的一款，最后都没有决定下来买哪个，到晚饭点了就都回家了。第二天我跟父亲又去了，一刻钟时间就定下来了缴费回家了。老爷们们买东西就是快，想要的花多少钱都值，没什么可犹豫的。当然，这些其实都是我之前了解过的。###办宽带然后就去办理联通宽带了。想起来真是又气愤、又心酸、又无奈。仅一条马路之隔的两个小区，办理宽带的地点都不一样。我先去了离家近的一家营业厅，告之要去远的那个，又驱车去远的那个办理了。我11点20排到队开始办理，办理完成出了营业厅时是 12 点 10，整整 50 分钟啊……我就哔了狗了。喝口水去，且听我说是什么情况。 开始办理，我说明来意，营业员直接给我报套餐……听他balabala介绍完。都是捆绑的业务，捆绑手机号，还得买新手机，手机卡还得充值，还送什么机顶盒，直接给我整懵了。我就问她，有没有不捆绑的。小姑娘说没有。心想没有就没有吧，反正家里也没座机，弄个新号当座机也好。然后又咨询了下，什么宽带上下行对称不对称啊，有没有国际线路啊，有没有专线啊，都有什么样的带宽啊，居然一问三不知，然后开始打电话，解决我的问题。还好吧，总算负责人的帮我问，这时候我才知道不管我办理2 0M、30M、50M、80M、还会 100M，上行都是 10M 带宽的上行，下行也全都不达标，这是技术人员的原话。哎罢了罢了心想办个 100M 的吧，技术大哥赶紧跟我说千万别办 100M 的 跟 50M 的一样，没嘛区别还贵，数据中心出口就那么大，除非特殊办理，一个月1W多。。。我真就哔了狗了，良心何在啊。心想那就算了，办了 50M 的吧。我又问了下国际网的事，又给另外的一个人打电话，我说明了我的意思，对面直接说，您的意思我懂，但是没有这个业务，国家不让访问的您肯定是访问不了的，哎，我认了，我要肉翻！然后又咨询下独享专线的问题，小姑娘又跟另外的一个人打了个电话，这个大哥跟我说，办是可以办的，问我为什么要专线，我说有服务器。我就问他有没有什么价目清单什么的，大哥说没有，这个现在很模糊，他上次给一个企业办理的40M的每个月 7000 块钱，这个价格是他能给的最低的。。。说我要办理 50M 的专线要 1W多，我说具体多少。大哥说就差不多这个范围，等我真要办的时候再跟他联系商量价格。我就哔了狗了，合着这都不是明码标价的，业务人员自己定价啊，真牛逼。放下电话，回归正题，还是先把家里的宽带办了吧，然后小姑娘又开始介绍套餐，balabala的说了一堆，我就想弄个 50M 的还要我办理卡，还要给卡交月租费，还要交 3 年的每月 130+的费用，我实在没耐心听下去了，我也不想办捆绑了，就直接跟她说我就办宽带业务，不弄其他的，你能不能弄。小姑娘就说你们这小区就只有这三种套餐，没有其他的不能单独办理宽带，我就怒了，当然我是有涵养的人，不会闹的啊。我就跟小姑娘说你确定么？小姑娘特肯定的说就这三种，没有其他的。我这时候觉得我要放大招了，我拿出手机，跟小姑娘说，我录下音可以吧，您再跟我说下是只能办理捆绑宽带业务，不能单独办理宽带业务么？小姑娘慌了，马上就说您等下我问问我们大区经理，然后离开了工位，去墙角打了个电话，很快就回来了说可以单独办理，但是只能一次办理一年的，我很无奈啊，哎。就要这个了，开始办理吧，让我选个号码，都包含数字 4 的，虽然我不信这个但是爸妈老婆肯定觉得不好啊，就开启扫描模式，运气还好，找到了一个不包含数字 4 的，还很好记的号码。小姑娘说，嚯看这么快一会儿都翻了20多页了。哥当年号称答题卡扫描器不是白叫的。给身份证，办业务，打单子，单子下来特意看了眼单子。都是错，50M 写成 20M，电话号码也不对，就问小姑娘这怎么回事，小姑娘说我也不知道啊，系统就是这么打出来的，我也懒得问了，要不她又要打电话问别人了浪费我的时间。我就跟她说你在单子上给我签个字，我办理的是 50M，你签个字，如果错了这是你的责任。拿着小姑娘签完的单子交完费我就走了。 人们习惯欺骗他人，也习惯了被他人欺骗。人们都怕麻烦，因为怕麻烦，我们承受了多少的欺骗与不平等。如果我们一直这样怕麻烦，不发出我们的声音，最后将没有任何发声的机会，也没有权利可言。 –EOF–","link":"/2016/03/13/2016-03-13-myhouse-1/"},{"title":"制作发布自己的pods到CocoaPods","text":"很早之前制作过自己的pods，以前是然后pull request到specs,最近又想弄了，发现现在不再接受pull request了 改为trunk服务了，所以记录一下，免得自己以后也忘记了。 关于CocoaPods Trunk这里有介绍。 准备先升级下CocoaPods版本,0.33以上就行了。 pod --version看一下版本。然后注册一下trunk pod trunk register your email &apos;your name&apos;your email就是填的邮箱了，your name就写你的名字。 完了话会收到一份邮件，验证一下。 然后就可以使用 pod trunk me 来查看一下你自己的注册信息了。 如果你已经制作完了pod并创建修改完了podspec，就直接往下看了，如果没有就在网上搜一下。 提交都弄完了我们就可以push啦。 当然了我们先验证下podspec文件喽 pod spec lint your.podspec这步要是有问题就看看报错修改喽。没问题就继续 pod trunk push your.podspec成功之后呢，我们看一下有没有 pod search yourpod就是搜下你提交的pod的名字。我们也可以在本地~/.cocoapods的路径下看一下有没有yourpod.podspec.json这个文件。 如果之前已经发布过的pod，作者本人声明所有权可以通过Claim Your Pods来看下具体步骤。认领地址 End制作的时候也会有很多要注意的地方，我实在是懒的很，还是自己搜搜吧。。。。我这个写的相当粗糙了，网上有很多写的相当具体的了。比如： http://nshipster.cn/cocoapods/ http://blog.wtlucky.com/blog/2015/02/26/create-private-podspec/ 更新一下:如果使用 pod trunk XXX报错 [!] Authentication token is invalid or unverified. Either verify it with the email that was sent or register a new session.那就再执行下命令 pod trunk register your email然后在你的邮箱里找找邮件打开验证一下，再继续。 更新 自己的制作的库要引用其他pod的文件的时候，引用方式头文件报错了，具体就是 #import&lt;xxxx.h&gt;这类不行了 换成 ＃import&lt;xxxx/xxxx.h&gt;–EOF–","link":"/2015/09/15/2015-09-15-zhi-zuo-fa-bu-zi-ji-de-podsdao-cocoapods/"},{"title":"下厨","text":"这两天老婆要全天在店里，晚上也吃不到老婆做的饭了。天天回来都喊累，我一琢磨，干脆我晚上自己做吧，多做点，第二天还能让她带饭吃。然后我就连续做了两天。基本上7点左右到家开始做，10点左右才做完，累的不行了最后也草草的吃两口就完了，做了俩小时，吃也就用10分钟。以下就是我这两天做的菜啦，看着不咋地，但是味道还可以。 这两天情绪波动比较大，心情不太好，有一种说不出来的感受，以后还是不要去关注那些消息了，相忘于江湖。 –EOF–","link":"/2016/03/18/2016-03-18-xia-chu/"},{"title":"在 storyboard 中使用静态 Cell 时 Label 内容的显示问题","text":"这两天遇到一个问题，通过 storyboard 创建的 static cell，通过代码设置 cell 上 label 文字的时候，发现文字经常不能正常显示，只有通过滑动 tableview 之后，重新刷新了以后才能正常显示。解决办法： If you are setting the text to nil somewhere when you try to set it to a non-nil value the actual view that contains the text will be missing. This was introduced in iOS8. Try setting to an empty space @” “ character instead. This was my issue but it happens when you set it to “” and nil. So you actually have to set it to “ “. So basically isEmpty causes this behavior as well. 就是在 storyboard 创建的 cell 中给 label 设置个初始值:“ ”，空格就行了，解决了我遇到的问题。 –EOF–","link":"/2016/05/15/2016-05-15-static-cell-with-detaillabel-in-storyboard/"},{"title":"我是我","text":"一件发生在去年冬天的事 起因结婚时没有蜜月，对老婆挺愧疚的。她很想去日本，就答应她说有时间咱们就去，还是得先去弄护照。我发现我的身份证快过期了，我就想先把身份证换了吧，然后就找了一个工作日，请了一天的假弄身份证去，还能回父母那跟他们待半天，挺好。 经过早上8点多，就到了派出所，结果没有人，等了一会儿，一个警员出现了。我就上前问他，身份证要过期了，要办理身份证，警员拿出来一张纸，丢给我看。我要到服务中心去办。我就想说就这纸，咱能不能放在服务窗上让人一眼就能看到。无话开车到服务中心，询问了一下，指给我说，走到头人最多的那个就是了。过去后排队填报交钱照相录指纹，最后告诉我不能办，因为之前身份证和现在人长的不象！我就问办事的大姐，您觉得这是不是我，大姐说应该是，但是她也没辙，系统不让录入……大姐告知我让我去户籍地派出所开个证明，然后更新照片。好吧我有回到派出所，这得亏我是本地人，要是海南的还得回海南弄了，要是湾区的还得回湾区了？哦，不用，人家是国际友人，一切好办。 回到派出所，诉说来意，被告知我要找我的户籍警S，但是今天S家里人住院了，不来上班，所以没法办。我就操了，说句不好听的，要是这位警察出点什么意外，我就一辈子不能办了？其他警察都不能办？说了半天，还是不行。说明天让我来试试，当时让我觉得舒服点的就是告诉了我派出所电话，让我明天来之前打电话问问再来，别耽误时间。办不成没办法，我拿着电话号码就回去了。 第二天早上，还是八点多，我心想打个电话问问吧，拿起手机拨了电话，告诉我空号！空号！空号！啊。我都懵了，这尼玛，我又打了一次告诉我关机。这尼玛不是座机电话么！！！没辙我又跑到了派出所，询问了一下，告诉我小灵通关机了。关机了！关机了！这不是私人电话啊，这是派出所的电话啊！我实在是无力了，弱弱的问我现在能办事了么？我的户籍警不在，出去办事去了。给了我他的电话，让我打电话给他直接问，我打了电话是另外的人接的，又给了我另外一个号码，我又打了这个，终于联系到我的户籍警S了，S告诉我他今天回不来，我赶紧问明天呢？告诉我让我明天打电话问问再说。没辙，一肚子气回家了。这已经两天了。 第三天早上，又是八点多，为什么又是八点多呢，因为前一家公司给养成的好习惯，八点半上班。抄起电话就打了电话，告诉我他现在在，一会儿就出去。我赶忙说，我马上就过去一刻钟就到。然后带上我的身份证、一张一寸照片。这次老爸送我去的。到了之后，等了一会儿S出来了，我说是我打的电话，说明了事由。期间我看见了我的高中同学，但是没有打招呼，他正要出警。S看了身份证和我带的照片，说这不象我，让我提供从小到大的各种证书上面带照片的。我就懵了，虽然胖很多吧，但这五官没变啊。各种解释说这就是我本人，我户口本也都给了。费了很多口舌，就是说不象我本人，必须有其他东西证明我就是我，我就是我！我提出让我父亲证明，S说不行，亲属不能证明你。S的逻辑就是亲属会帮忙做假，之前有人为了高考替换了身份证照片。可是…可是我都工作了好几年了啊，我就是换个新身份证而已至于的么。由于时间很长，父亲有些着急，进来找我，了解了原因之后很愤怒，非要投诉S。我拦着父亲没让，因为没用的，以后肯定会找麻烦的。我承认我很怂，我只是个想安稳过日子的小市民，我不想惹事。就在这时候我高中同学出警回来了，我跟S说，M是我高中同学，他能证明我就是我，S回头看看M，说你来看看。M直接说不用看了，就是我高中同学，一眼就看出来了。S拿起东西就去办去了，让我等着。 M让我进去聊，第一次进局子内部，路过一间间的审讯室，来到了办公室，聊了很多，毕业后各自的生活，哪个同学怎么怎么样了。M跟我抱怨的最多的就是他这份警察的工作，理性与现实的差距。聊了一会儿，有人喊他要出警去。他说让我出去等一会儿，估计快弄完了，留了电话我就自己走出来了，快到门口的时候听见有人和M说，你等会，出去把这带上，小心点，我回头看了一眼，那人递过去一把枪，帮M把枪袋穿上了。到了大厅里等了一会儿，S出来了，说弄完了，拿走吧，让我再去服务大厅办就好了。我接过东西，道感谢，S说你应该感谢M，给你省大事了，我忙说是是，拿着东西就奔服务大厅去了。那天风特别大，刮的脸特别的疼。 这三天去派出所，我总是看到一个大爷。第一天我看他很费劲的想进屋，我就帮他撩起大门帘，扶他进去坐下了。第二天我去的是他已经在了，有个警察在跟他说这什么，我只是零星的听见，一个警察说，他们不管这个，让他该找谁找谁去，在这坐着也没用。老大爷耷拉着脑袋嘴里再说着什么，但是我一句都没听懂，不知道他在说什么。第三天我去的时候，又见到了老大爷，依旧坐在那里，但是没有警察在那了。他依旧耷拉着脑袋，一根树枝靠在他的腿边，可能是他的拐棍吧。再往腿上一看，我都吓到了，大爷的小腿都露在外面啊，那可是三九天啊，我穿着羽绒服啊。大爷穿的很破烂，很臃肿，看不出衣服的原色，之前没看到露着的小腿，因为已经跟衣服一个颜色了，全是黑的。我想我先办事吧，一会儿再问问大爷怎么了。后来被同学叫进去了，等我出来了，大爷不见了，但那根树枝落在了地上，我询问了一下窗口的警察刚才坐这的大爷呢，都说不知道。我出了派出所，马路上找了一会儿，问了几个门口的商贩，都说没注意。大爷不知道去哪了，我不知道大爷说的是什么，他有没有家人。后来给M发条微信问了有没有见到那个大爷，M没有回我。我刷了下朋友圈，看到M转发了条消息，听党指挥… 我TMD真的很感谢GCD。 没有结果–EOF–","link":"/2016/05/12/2016-05-12-i-am-me/"},{"title":"上传ipa包.Bundle文件问题","text":"起因前些日子集成了某人脸识别的 SDK，通过他们发来的文档成功接入了，发测试也是使用了蒲公英进行分发的，通过 Xcode 打包出 ipa 然后传到蒲公英，一切都是很正常。直到前两天我要提交审核了，上传 ipa 的时候报错了。 报错信息: ERROR ITMS-90166: “Missing Code Signing Entitlements. No entitlements found in bundle ‘com.xx.xxxx’ for executable ‘Payload/xx.app/PlugIns/xxxx.bundle/xxxx’.”” ERROR ITMS-90171: “Invalid Bundle Structure - The binary file ‘xx.app/PlugIns/xxxx.bundle/xxxx’ is not permitted. Your app can’t contain standalone executables or libraries, other than the CFBundleExecutable of supported bundles. Refer to the Bundle Programming Guide at https://developer.apple.com/go/?id=bundle-structure for information on the iOS app bundle structure.” 基本上就是报这两个错误，由于文件都是别人提供的，我就去问了下技术支持，但是没人鸟我啊，所以只能自己解决了。 刚看到报错信息我就想当然的就去网上搜了。费了很长时间都没有解决，焦头烂额，人也很烦躁。 后来实在没招了，仔细看了下报错信息，再对比下源文件，bundle 包下有一个可执行文件，报错信息中也确实给指出了问题: Your app can’t contain standalone executables or libraries, other than the CFBundleExecutable of supported bundles. 解决办法： 删除编译 bundle 的 info.plist 中 Executable file 删除 bundle 所有的可执行文件。 因为 bundle 是静态的，也就是说，我们包含到包中的资源文件作为一个资源包是不参加项目编译的。也就意味着，bundle包中不能包含可执行的文件。它仅仅是作为资源，被解析成为特定的2进制数据。 还在研究项目中引用的工程是怎么自己把执行文件也打包到 bundle 中的，等研究明白了再做更新。 总结还是自己太不稳当了，太毛躁，遇到问题就知道网上查，其实问题已经很明显了，稍微用下心就能很快的解决。一定要记得看仔细看报错信息，答案都在里面了。 –EOF–","link":"/2016/08/01/2016-08-01-shang-chuan-ipazhong-dot-bundlewen-jian-wen-ti/"},{"title":"iOS SandBox","text":"经常使用 SandBox ,但是总也记不住，记录下来免的又忘记了。 沙盒目录沙盒的目录中有很多文件，经常打交道的是Data文件，它包含下面三个文件 Documents：用于存储用户数据，iTunes备份和恢复的时候会包括此目录，所以，苹果建议将程序中建立的或在程序中浏览到的文件数据保存在该目录下。 Library：包含两个子目录：Caches 和 Preferences。Caches用来存放用户需要换成的文件。Preferences是APP的偏好设置，可以通过NSUserDefaults来读取和设置。 tmp： 用于存放临时文件，这个可以放一些当APP退出后不再需要的文件。 获取沙盒路径根目录//获取沙盒根目录 NSString *directory = NSHomeDirectory();Documents路径//获取Documents路径 NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES); NSString *path = [paths objectAtIndex:0];Library路径//获取Library路径 NSArray *paths = NSSearchPathForDirectoriesInDomains(NSLibraryDirectory, NSUserDomainMask, YES); NSString *path = [paths objectAtIndex:0];Caches路径//获取Caches路径 NSArray *paths = NSSearchPathForDirectoriesInDomains(NSCachesDirectory, NSUserDomainMask, YES); NSString *path = [paths objectAtIndex:0];tmp路径//获取tmp路径 NSString *tmp = NSTemporaryDirectory();–EOF–","link":"/2017/02/23/2017-02-23-ios-sandbox/"},{"title":"一个内存泄露问题","text":"问题的出现发现在文件传输的过程中，内存一直在增长并且不释放，反复的测试发现是在文件上传过程中，上传文件块过程中内存不释放，导致内存泄漏。 定位问题通过 Instruments Leaks 观察定位到是一块儿申请的空间没有释放，这个工具最后显示出来的调用栈显示申请的内存没有释放，导致内存泄露。 1NSData *data = [LBFileManager readDataOffset:self.blockInfo.location withLength:self.blockInfo.length from:path error:error]; 指向的是这个函数内部 最开始一直以为是这块儿的问题，修改了函数入参 想的是外部传入赋值的对象，交给外部控制（实际上其实这块儿没有影响）。经过反复测试，发现并不是这块儿的问题。测试的过程中发现存储该对象的地方已经移除了持有了该对象，理论上外部不再持有该对象，但是该对象并没有被释放，没有调用dealloc方法。在和同事的讨论过程中，发现这是个循环引用问题，外部持有者已经不再持有该对象，但是该对象内部形成了循环引用，导致不能释放。 但是我检查了几遍代码并没有发现循环引用的问题。于是使用了return大法，一个个的函数测试，最终定位到读取文件数据发起网络请求后内存泄露。 经过一番查找，发现官方文档里有这样一句话 The session object keeps a strong reference to the delegate until your app exits or explicitly invalidates the session. If you don’t invalidate the session, your app leaks memory until it exits. 意思就是 session 对象会对代理进行强引用，如果不使 session 失效就会出现内存泄露。 解决办法在调用网络任务结束的地方 调用以下方法 123456789101112131415161718192021/* -finishTasksAndInvalidate returns immediately and existing tasks will be allowed * to run to completion. New tasks may not be created. The session * will continue to make delegate callbacks until URLSession:didBecomeInvalidWithError: * has been issued. * * -finishTasksAndInvalidate and -invalidateAndCancel do not * have any effect on the shared session singleton. * * When invalidating a background session, it is not safe to create another background * session with the same identifier until URLSession:didBecomeInvalidWithError: has * been issued. */- (void)finishTasksAndInvalidate; /* -invalidateAndCancel acts as -finishTasksAndInvalidate, but issues * -cancel to all outstanding tasks for this session. Note task * cancellation is subject to the state of the task, and some tasks may * have already have completed at the time they are sent -cancel. */- (void)invalidateAndCancel; 更新每次创建的session 并不会随着调用finishTasksAndInvalidate 或者invalidateAndCancel 而释放内存，虽然session已经置为nil但是占用的内容缓存并不会释放掉（要过10多分钟才能释放掉，这是官方上说的我，我试了几次等了半小时也没有释放）查了不少资料，都是要用单例去解决这个问题。 临时解决办法，设置 NSURLSessionConfiguration 的 URLCache 12345678NSURLSessionConfiguration *configuration = [NSURLSessionConfiguration defaultSessionConfiguration];//设置请求超时为10秒钟configuration.timeoutIntervalForRequest = 10;//在蜂窝网络情况下是否继续请求（上传或下载）configuration.allowsCellularAccess = NO;configuration.URLCache = [[NSURLCache alloc] initWithMemoryCapacity:0 diskCapacity:0 diskPath:nil];// 构造NSURLSession，网络会话；_session = [NSURLSession sessionWithConfiguration:configuration delegate:self delegateQueue:nil]; 是解决了内存的问题，但是不使用缓存又很慌，毕竟应用场景是有大量的文件传输 参考 https://stackoverflow.com/questions/32878257/ios-memory-management-issue-with-arc https://developer.apple.com/documentation/foundation/url_loading_system https://developer.apple.com/documentation/foundation/urlsession https://stackoverflow.com/questions/29514759/uploading-uiimage-data-to-the-server-getting-memory-peaks http://www.drdobbs.com/architecture-and-design/memory-leaks-in-ios-7/240168600 https://blog.csdn.net/jsjxiaobing/article/details/41828419 https://stackoverflow.com/questions/28223345/memory-leak-when-using-nsurlsession-downloadtaskwithurl/35757989#35757989","link":"/2018/07/18/2018-07-18-urlsession-memory-leak/"},{"title":"macOS崩溃日志符号化","text":"分析工具网上一大堆文章都是分析iOS的崩溃日志的，针对Mac的特别少，其实基本原理都差不多，就不再详细的描述了。就推荐一个崩溃日志符号化的工具。 下载地址 源码地址 使用方法： 将 .crash 文件和 .dSYM 文件放在同一目录下。 将 .crash 或者 .dSYM 拖入这个工具中，另外一个文件会自动导入 注1：.dSYM 可以在打包时候生产的 .xcarchive 包中找到。 注2：注意 .crash 和 .dSYM 的UUID要一致 查看dSYM UUID xcrun dwarfdump --uuid file_path .crash 查看UUID 在 Binary Images 的下一行 包名 后面的那一串字符 还有一个工具可以参考dSYMTools这个工具也可以符号化崩溃日志，需要手动操作，具体使用方式链接上面说的很清楚了。 参考链接 http://www.smileykeith.com/2013/08/09/os-x-crash-symbolication/ https://stackoverflow.com/questions/5842147/how-to-symbolicate-mac-osx-crash-reports-issued-by-apple","link":"/2018/08/03/2018-08-03-maccrashreportssymbol/"},{"title":"iOS&amp;macOS 异常捕获","text":"最近在弄 crash 日志的处理，找到了几篇文章，也还在研究，记录一下。目前已经能正常记录程序 crash 时的调用栈。代码在https://gist.github.com/wuchuwuyou/fdd20f64510e7652c7d95f5a22b7d988.目前还不完善，后续继续更新。 参考 https://github.com/plausiblelabs/plcrashreporter https://www.jianshu.com/p/29051908c74b http://www.iosxxx.com/blog/2015-08-29-iosyi-chang-bu-huo.html https://github.com/kaler/CrashKit https://www.jianshu.com/p/948dd7a0f62d","link":"/2018/08/13/2018-08-13-ios-and-macos-yi-chang-bu-huo/"},{"title":"block memory management","text":"block内存管理，先看几个例子 123456781. int a = 0; void (^block)(void) = ^ { printf(\"in block a = %d,%p\\n\",a,&amp;a); }; a = 1; block(); printf(\"after block a = %d,%p\\n\",a,&amp;a); 123456782. __block int a = 0; void (^block)(void) = ^ { printf(\"in block a = %d,%p\\n\",a,&amp;a); }; a = 1; block(); printf(\"after block a = %d,%p\\n\",a,&amp;a); 1234567893. __block int a = 0; void (^block)(void) = ^ { printf(\"in block a = %d,%p\\n\",a,&amp;a); a = 2; }; a = 1; block(); printf(\"after block a = %d,%p\\n\",a,&amp;a); 输出分别是 1234567891.in block a = 0,0x600000252ec0after block a = 1,0x7ffee71c81042.in block a = 1,0x600000429ef8after block a = 1,0x600000429ef83.in block a = 1,0x60000042b118after block a = 2,0x60000042b118 输出中不难看出在1中变量 a 在 block 中被 copy 了生成了新的地址。经过 __block修饰符声明的变量在 block 中就是同一个地址。","link":"/2018/08/15/2018-08-15-block-memory-management/"},{"title":"记录一下","text":"记录 自定义NSSearchField 背景色NSPopover cocoa绘图 UIKit =&gt; AppKit 国际手机号前缀码 NSTableView选中行背景色 Using View-Based NSTableView Apple Sample Code Default Mac OS X System Key Bindings iOS Icon LaunchImage Size 键盘事件相关","link":"/2018/08/28/2018-08-28-lately-record/"},{"title":"CocoaPods私有库","text":"#CocoaPods私有库 私有库版本库 创建版本库（repo）私有库的一个索引 建一个git空仓库 执行Pod repo list列出本地的所有的版本库 执行pod repo add repo的名字 git地址将索引库添加到本地 创建私有库项目创建项目pod lib create &lt;项目名称&gt; Assets 资源文件 Class 源码文件。根据命令行提示一步步执行，然后就写代码招呼吧。提交代码的时候记得添加tag一起提交 与 .podspec里面的version一致pod lib lint 检查配置文件，通过以后可以提交pod repo push 版本库名称 组件库名字.podspec pod lib lint 和 pod spec lint 命令分别是对podspec的本地校验和远程校验 配置依赖自己写的cocoapods库中引用其他第三方库只需要在.podspec文件中设置 s.dependency 'AFNetworking', '~&gt; 2.3'这样的就可以了。但是如果你依赖的是自己的私有库，就会有点问题，需要麻烦一点弄一下。 依赖私有库私有库配置依赖中引用其他私有库，在.podspec 中的写法和上面一样 s.dependency 'LDKeychain', '~&gt; 0.1.0' |LDKeychain就是我自己的之前写的私有库，通过 dependency 引用私有库文件。 但是我们在验证.podspec和往自己的私有repo中提交的时候会报错。只需要如下操作 DeviceUniqueKey.podspec 为我的创建的私有库，repo_name是版本库的名字 需要在 pod lib lint 命令是加上 –sources repo地址。例如：本地验证 1pod spec lint xxx.podspec --sources=http://xxx@git.xxx.xx/xx/myRepo.git,https://github.com/CocoaPods/Specs.git 验证远程版本库 1pod lib lint DeviceUniqueKey.podspec --sources=https://github.com/CocoaPods/Specs.git,xxx.xxx.xxx.xxx/iOS/repo_name.git pod repo push 时也需要在命令上加上–sources 例如： 1pod repo push lenovo-specs-repo DeviceUniqueKey.podspec —sources=ssh://git@xxx.xxx.xxx.xxx/iOS/repo_name.git --allow-warnings --allow-warnings 表示忽略警告。 完事记得pod repo update repo_name一下","link":"/2018/08/28/2018-09-12-cocoapods-private-repo/"},{"title":"Git Tag","text":"Git tag git tag 列出所有标签 git show tag_name 列出该标签的版本信息 git tag tag_name 创建名字为tag_name的标签 git push origin tag_name推送制定的标签 git push origin - -tags 推送本地所有新增的标签 git tag -d tag_name 删除本地名字为tag_name的标签 git push origin :refs/tags/tag_name 删除云端名字为tag_name的标签","link":"/2018/08/28/2018-09-12-git-tag/"},{"title":"macOS Finder Extension","text":"Finder SyncmacOS 上的Finder App 的应用拓展 可以控制显示文件/文件夹的的图标，控制选中文件/文件夹的的右键菜单操作。在工程中新建target的 选 Finder Sync 就行了，默认会创建一些示例代码。Finder Sync 和 主app 通信可以使用 URL Scheme 规则进行数据传递，共享数据的话设置一下 App Group\bs 。也可以主app启动个本地 http server 进行通信也可以。 https://github.com/BokkkRottt/FinderSyncDemo https://www.jianshu.com/p/9124340f0f71 https://developer.apple.com/library/archive/documentation/General/Conceptual/ExtensibilityPG/Finder.html#//apple_ref/doc/uid/TP40014214-CH15-SW1 http://www.cocoachina.com/ios/20141004/9824.html https://developer.apple.com/design/human-interface-guidelines/macos/extensions/finder-sync-extensions/","link":"/2018/08/28/2018-09-30-finder-extension/"},{"title":"macOS创建随机文件","text":"https://cloud.tencent.com/developer/article/1004339","link":"/2018/10/31/2018-10-31-create-file/"},{"title":"github Permission denied (publickey)","text":"今天重新生成了github的ssh key,添加完以后发现提示 12345git@github.com: Permission denied (publickey).fatal: Could not read from remote repository.Please make sure you have the correct access rightsand the repository exists. 然后查了一下资料，因为我在创建的时候给文件输入了个名字 12Generating public/private rsa key pair.Enter file in which to save the key (/Users/murphy/.ssh/id_rsa): github 可以通过ssh-add ~/.ssh/your_file_name的方式解决。也可以在 ~/.ssh/ 目录下编辑config配置文件 123456vi configHost github.com HostName github.com User git IdentityFile ~/.ssh/github_rsa User 就是用户名 最后验证一下 ssh -T git@github.com","link":"/2018/11/01/2018-11-01-github-permission-denied/"},{"title":"Cocoa中WebView允许选择本地上传文件","text":"Cocoa中WebView允许选择本地上传文件Cocoa中使用 webview 加载URL显示网页，在进行选择文件上传时候 1&lt;input type=\"file\" name=\"uploadfile\"&gt; 在webview上不能正常的弹出选择器，cef正常。 WebUIDelegate解决该问题只需要实现 WebUIDelegate 的代理方法 1- (void)webView:(WebView *)sender runOpenPanelForFileButtonWithResultListener:(id&lt;WebOpenPanelResultListener&gt;)resultListener; 实现内容12345678910111213141516171819202122232425262728#pragma mark - webview/// &lt;input type=\"file\"&gt;- (void)webView:(WebView *)sender runOpenPanelForFileButtonWithResultListener:(id&lt;WebOpenPanelResultListener&gt;)resultListener { // Create the File Open Dialog class. NSOpenPanel* openDlg = [NSOpenPanel openPanel]; // Enable the selection of files in the dialog. [openDlg setCanChooseFiles:YES]; // Enable the selection of directories in the dialog. [openDlg setCanChooseDirectories:NO]; if ([openDlg runModal] == NSOKButton) { NSArray* URLs = [openDlg URLs]; NSMutableArray *files = [[NSMutableArray alloc]init]; for (int i = 0; i &lt;[URLs count]; i++) { NSString *filename = [[URLs objectAtIndex:i]relativePath]; [files addObject:filename]; } for(int i = 0; i &lt; [files count]; i++) { NSString* fileName = [files objectAtIndex:i]; [resultListener chooseFilename:fileName]; } }} 参考 https://developer.apple.com/documentation/webkit/wkuidelegate/1641952-webview?language=objc https://stackoverflow.com/questions/33642521/simple-swift-cocoa-app-with-webkit-upload-picture-doesnt-work/33694264#33694264 https://stackoverflow.com/questions/7626463/how-to-allow-files-uploading-with-webview-in-cocoa","link":"/2018/11/02/2018-11-02-cocoa-webview-upload-file/"},{"title":"监听键盘鼠标事件","text":"监听键盘鼠标事件今儿要做一个监听全局的键鼠事件的操作，之前使用的都是指监听应用内某一个控件的事件只需要空间是继承 NSResponder 的就可以了，按需实现下面的方法就行了 每个键盘上的按键都有一个对应的编码,下面是针对command c和command v的处理,c和v分别对应编码是8和9,command对应的是NSEventModifierFlagCommand 。记得把事件传递下去 123456789101112131415161718typedef NS_ENUM(unsigned short, LBKeyboardCode) { LBKeyboardCodeLetterC = 8, LBKeyboardCodeLetterV = 9,};- (void)keyDown:(NSEvent *)event { if (event.modifierFlags &amp; NSEventModifierFlagCommand) { NSLog(@&quot;key down event with command:%@&quot;,event); if (event.keyCode == LBKeyboardCodeLetterC) { // command c }else if (event.keyCode == LBKeyboardCodeLetterV) { // command v } [self.nextResponder keyDown:event]; }else { [self.nextResponder keyDown:event]; NSLog(@&quot;key down event:%@&quot;,event); }} 创建监听123456789101112131415161718192021CGEventTapLocation tapLocation = kCGHIDEventTap;CGEventTapPlacement tapPlacement =kCGHeadInsertEventTap;CGEventTapOptions tapOptions = kCGEventTapOptionDefault;CGEventMask eventMask = _monitorEventMask();// 监听某一个进程的，这个就是监听自己的应用的// pid_t pid = [[NSProcessInfo processInfo] processIdentifier];// self.eventTap = CGEventTapCreateForPid(pid, tapPlacement, tapOptions, eventMask, _captureKeyStroke, (__bridge void * _Nullable)(self));/// 监听全系统的self.eventTap = CGEventTapCreate(tapLocation,tapPlacement,tapOptions,eventMask,_captureKeyStroke,(__bridge void * _Nullable)(self));if (!self.eventTap) { fprintf(stderr, \"failed to create event tap\\n\"); exit(1);}self.runLoopSource = CFMachPortCreateRunLoopSource(kCFAllocatorDefault, self.eventTap, 0);CFRunLoopAddSource(CFRunLoopGetCurrent(), self.runLoopSource, kCFRunLoopCommonModes);CGEventTapEnable(self.eventTap, true);CFRunLoopRun(); 正常处理123456789101112131415161718CGEventRef _captureKeyStroke(CGEventTapProxy proxy, CGEventType type, CGEventRef event, void* userInfo){ /// 不处理的事件 if (type == kCGEventNull | type == kCGEventTapDisabledByUserInput) { return event; } LDKMEventMonitor *self = (__bridge LDKMEventMonitor *)userInfo; /// 超时的重试 if (type == kCGEventTapDisabledByTimeout) { NSLog(@\"Event Taps Disabled! Re-enabling\"); CGEventTapEnable(self.eventTap, true); return event; } /// 转化成 NSEvent 给外部处理 NSEvent *ev = [NSEvent eventWithCGEvent:event]; return event;} 超时处理如果回调的处理时间过长，这个事件会被置为失效，重新设置下可以就可以了。由于监听的事件调用特别频繁，还是要注意下对于事件处理的效率问题。 12345if (type == kCGEventTapDisabledByTimeout) { NSLog(@\"Event Taps Disabled! Re-enabling\"); CGEventTapEnable(eventTap, true); return event;} 调试在.plist 文件添加下面的内容 12&lt;key&gt;NSAppleEventsUsageDescription&lt;/key&gt;&lt;string&gt;&lt;/string&gt; 调试的时候比较麻烦，第一次运行会提示： 需要在 system preferences -&gt; security -&gt; privacy -&gt; accessibility 里面添加并勾选 然后每次调试前都要在这个设置里面先删除，然后再添加勾选，特别蛋疼。暂时还不知道有啥好的解决办法 NSEvent还有可以通过 NSEvent 的API 来做事件监听 123+ (nullable id)addGlobalMonitorForEventsMatchingMask:(NSEventMask)mask handler:(void (^)(NSEvent*))block NS_AVAILABLE_MAC(10_6);+ (nullable id)addLocalMonitorForEventsMatchingMask:(NSEventMask)mask handler:(NSEvent* __nullable (^)(NSEvent*))block NS_AVAILABLE_MAC(10_6);+ (void)removeMonitor:(id)eventMonitor NS_AVAILABLE_MAC(10_6); Global是全局的（除自己的 app 之外的 event），local就是监听自己 app 的 event。关于 NSEventMask 暂时不清楚为什么设置的 NSEventMaskAny 有些事件并不能响应，比如触摸板的双指滑动。使用 Global 的时候，会有监听不到其他应用的键盘输入事件的时候，比如微信、QQ等输入事件。 参考 https://developer.apple.com/documentation/coregraphics/quartz_event_services?language=objc https://stackoverflow.com/questions/10365487/segmentation-fault-11-cgeventtap-application-stops-processing-mouse-events-aft https://forums.developer.apple.com/thread/109283 https://stackoverflow.com/questions/2969110/cgeventtapcreate-breaks-down-mysteriously-with-key-down-events","link":"/2018/11/22/2018-11-22-Listening-keyboard-and-mouse-events-for-macos/"},{"title":"Go Test","text":"GO 测试Go 程序测试分三类，功能测试(test)、基准测试(benchmark,也称性能测试)、以及事例测试(example) 测试文件命名规范为要测试的文件加上_test后缀，即如果被测试文件为abc.go则测试文件名为abc_test.go 每个测试文件必须至少包含一个测试函数 功能测试函数，其名称必须以Test为前缀，并且参数列表只应有一个*testing.T类型的参数声明，例如 func TestHello(t *testing.T) {} 性能测试函数，其名称必须以Benchmark为前缀，并且唯一参数的类型必须是 *testing.B 类型的，例如 func BenchmarkHello(b *testing.B) {} 示例测试函数，其名称必须以Example为前缀，但对函数的参数列表没有强制规定。","link":"/2018/12/17/Go-Test/"},{"title":"Mac App 调用显示关于页面","text":"创建新项目的时候系统会自动创建一个显示页面，比如 vs code 的，这都是默认显示的窗口但是我们想手动调用这个默认窗口的话，系统也提供了一些方法，可以直接显示出来 1- (void)orderFrontStandardAboutPanel:(id)sender; 也可以使用下面这个方法设置窗口里面要显示的内容 1- (void)orderFrontStandardAboutPanelWithOptions:(NSDictionary&lt;NSAboutPanelOptionKey, id&gt; *)optionsDictionary; 接受参数是一个字典 key 是 NSAboutPanelOptionKey orderFrontStandardAboutPanel实现就是调用 orderFrontStandardAboutPanelWithOptions 传参 nil 实现的。 具体使用方法 : 1234567 NSDictionary *info = @{// NSAboutPanelOptionCredits: attributedString, NSAboutPanelOptionApplicationName:@\"应用名称\", NSAboutPanelOptionApplicationIcon:[NSImage imageNamed:NSImageNameComputer], NSAboutPanelOptionVersion:@\"1.0.0\", NSAboutPanelOptionApplicationVersion:@\"1.0.0.100\" }; 显示如下图所示：第一行icon 就是应用图标了，NSAboutPanelOptionApplicationIcon可以不设置，默认使用的是 [NSImage imageNamed:@&quot;NSApplicationIcon&quot;] 第二行应用名称，NSAboutPanelOptionApplicationName，参数字符串。 第三行NSAboutPanelOptionVersion、第四行NSAboutPanelOptionApplicationVersion 版本信息(内容长了会自动换行，括号里的就理解为第四行吧)，也可以不填，默认显示分别是 CFBundleVersion CFBundleShortVersionString 第五行，就是上图一长串abc那个，有两种显示方式，当然也可以不设置。第一种: 12345678910NSString *string = @&quot;aaaaaaaaa\\nbbbbbbbbb\\ncccccccccc&quot;;NSMutableParagraphStyle *paragraphStyle = [[NSMutableParagraphStyle alloc] init];[paragraphStyle setAlignment:NSTextAlignmentCenter]; NSMutableAttributedString *attributedString = [[NSMutableAttributedString alloc] initWithString:string]; [attributedString addAttribute:NSParagraphStyleAttributeName value:paragraphStyle range:NSMakeRange(0, [string length])]; 通过关键字 NSAboutPanelOptionCredits 设置value就可以了，这个只接收 NSAttributedString 类型的参数，其他的会报错。 第二种:在项目中添加名称为Credits.rtf(这个文件也是可以多国语言的)的文件，在里面添加想要添加内容，如下图所示 最后一行 copyright 信息，是读取项目中info.plist的copyright字段来显示的，文档上没有提及单独设置的地方。 最后 MainMenu.xib 默认创建出了关于的item 并且绑定了事件我们可以重新绑定个事件，做自己的操作，也可以添加个 NSApplication 的类别，重写 - (void)orderFrontStandardAboutPanel:(id)sender; 方法 NSAboutPanelOptionApplicationIcon NSAboutPanelOptionApplicationName NSAboutPanelOptionApplicationVersion NSAboutPanelOptionCredits NSAboutPanelOptionVersion 只支持10.13以上 参考 https://developer.apple.com/documentation/appkit/nsapplication/1428724-orderfrontstandardaboutpanel?language=objc","link":"/2018/11/29/Mac-App-About-Panel/"},{"title":"Cocoa中设置文件的权限","text":"在做文件系统的时候需要设置文件权限，之前都是用 NSTask 执行脚本设置文件权限，后来发现一个可以使用 NSFileManager 进行设置。NSFilePosixPermissions 123456789101112NSFileManager *fileManager = [NSFileManager defaultManager];NSMutableDictionary *attributes = [NSMutableDictionary dictionary];if (isReadOnly) {// -r--r--r-- [attributes setValue:[NSNumber numberWithShort:0444] forKey:NSFilePosixPermissions];} else {// -rwxr--r-- [attributes setValue:[NSNumber numberWithShort:0744] forKey:NSFilePosixPermissions];}NSError *error = nil;[fileManager setAttributes:attributes ofItemAtPath:path error:&amp;error]; Linux一般将文件可存取访问的身份分为3个类别：owner、group、others，且3种身份各有read、write、execute等权限 - 没有权限-rwxrwxrwx8进制r 22 4 w 21 2 x 2*0 1 -r–r–r– 0444-rwxr–r– 0744 参考 https://linxz.github.io/tianyizone/linux-chmod-permissions.html","link":"/2018/11/29/NSFilePosixPermissions/"},{"title":"ATS","text":"前几日，同事 CM 合并代码后，运行工程，网络报错 ATS 12code = -1022The resource could not be loaded because the App Transport Security policy requires the use of a secure connection. 可是项目中info.plist已经添加了 NSAllowsArbitraryLoads ,网上查找了一大圈还是没有解决问题， CM 尝试删除了 info.plist 中另一个 key NSAllowsArbitraryLoadsInWebContent 居然神奇的好用了。 赶紧查文档，文档上就有说明 文档说的很清楚了，在 iOS 10 和 macOS 10.12 以后，只要写了 NSAllowsArbitraryLoadsForMedia NSAllowsArbitraryLoadsInWebContent NSAllowsLocalNetworking 这个三个中任何一个 NSAllowsArbitraryLoads 默认就为 NO 了，不管你设置的啥。但是还是一脸懵逼… 参考 https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CocoaKeys.html#//apple_ref/doc/uid/TP40009251-SW68 https://www.nowsecure.com/blog/2017/08/31/security-analysts-guide-nsapptransportsecurity-nsallowsarbitraryloads-app-transport-security-ats-exceptions/ https://forums.developer.apple.com/message/198714#198714 https://swiftcafe.io/2016/09/20/ats/ https://www.jianshu.com/p/236533b921a3","link":"/2019/01/05/NSAllowsArbitraryLoads/"},{"title":"NSOutlineView","text":"在使用 NSOutlineView 实现文件结构目录的时候，发现在10.12以下版本，首次加载目录时候不能正常的显示出来，滑动一下页面就可以显示了。当时使用的刷新方法是 reloadItem: 和 reloadItem:reloadChildren: NSOutlineView 是继承 NSTableView 的，所以就试了下调用了 reloadData 就能正常显示了，查了下文档，文档上就有说明 Important It is possible that your data source methods for populating the outline view may be called before awakeFromNib if the data source is specified in Interface Builder. You should defend against this by having the data source’s outlineView:numberOfChildrenOfItem: method return 0 for the number of items when the data source has not yet been configured. In awakeFromNib, when the data source is initialized you should always call reloadData. 通过xib加载的视图，当数据初始化完成后，你需要调用reloadData正常展示数据","link":"/2019/01/05/NSOutlineView/"},{"title":"NSTask Output Character","text":"123456789NSTask *task = [[NSTask alloc] init];NSMutableDictionary * e = [NSMutableDictionary dictionaryWithDictionary:[[NSProcessInfo processInfo] environment]];[e setObject:@\"en_US.UTF-8\" forKey:@\"LC_ALL\"];[e setObject:@\"en_US.UTF-8\" forKey:@\"LANG\"];// [e setObject:@\"zh_CN.UTF-8\" forKey:@\"LC_ALL\"];// [e setObject:@\"zh_CN.UTF-8\" forKey:@\"LANG\"];//[task setEnvironment:e]; 中文字符编码问题\\xe5\\x90\\x84\\xe7\\xa7 添加上面的 environment 就可以了","link":"/2019/01/14/NSTask-Output-Character/"},{"title":"Qt报错 a missing vtable usually means the first non-inline virtual member function has no definition","text":"报错 a missing vtable usually means the first non-inline virtual member function has no definition 123添加 Q_OBJECT 时 记得添加 头文件 #include &lt;QObject&gt;析构函数clean 一下，重新构建下 报错： error: ‘staticMetaObject’ is not a member of ‘YOUR_CLASS_NAME’ 1多继承的话， public QObject 放在写继承那个位置的第一个","link":"/2020/06/16/Qt-Error-1/"},{"title":"Qt 项目集成 Mac Extension","text":"直接导出原生Xcode工程的 extension 在 pro 文件中加入关联 12345macx: {plugins.path = Contents/PlugInsplugins.files = $$_PRO_FILE_PWD_/../ext/xxx.appexQMAKE_BUNDLE_DATA += plugins} plugins.path 文件输出的应用包内路径 plugins.files extension 的本地路径 Finder Sync Communicate https://stackoverflow.com/questions/41016558/how-should-finder-sync-extension-and-main-app-communicate https://gist.github.com/hkalexling/1358f9bb2e0708b7bc1ba03daaeb97d0","link":"/2020/06/17/Qt-Mac-Extension/"},{"title":"Qt QLineEdit 输入框不可编辑","text":"12（1）调用lineEdit-&gt;setEnabled(false)。确实不可编辑了。不过路径太长时就只能看到后部分了。没关系，再想别的办法就是了。（2）setFocusPolicy(Qt::NoFocus); 设置它不可获得焦点。OK.不可编辑，又能查看完整的显示文本。","link":"/2020/06/17/Qt-QLineEdit-%E4%B8%8D%E5%8F%AF%E7%BC%96%E8%BE%91/"},{"title":"Qt关闭最后一个window窗口进程退出问题","text":"12345int main(int argc, char *argv[]){ QApplication a(argc, argv); a.setQuitOnLastWindowClosed(false);}","link":"/2020/06/16/Qt-QuitOnLastWindowClosed/"},{"title":"Qt 设置版本号","text":"Qt 设置版本号 You can set the VERSION qmake variable in your pro file:VERSION = 1.0.0.0 应用中想调用版本号可以这么设置 DEFINES += APP_VERSION=\\&quot;$$VERSION\\&quot; 代码中就可以使用 APP_VERSION 获取版本号了","link":"/2020/06/16/Qt-Set-App-Version/"},{"title":"Qt系统托盘","text":"QSystemTrayIcon macOS 上只显示托盘图标如果只想使用托盘，不想在dock上显示应用的话就在项目中 info.plist 里加上 12&lt;key&gt;LSUIElement&lt;/key&gt;&lt;string&gt;1&lt;/string&gt;","link":"/2020/06/17/Qt-Tray/"},{"title":"Qt base64","text":"1234567891011121314QString base64Encode(const QString &amp;src){ QByteArray s = src.toUtf8(); QByteArray ba = s.toBase64(); return QString(ba);}QString base64Decode(const QString &amp;src){ QByteArray s = src.toUtf8(); QByteArray ba = QByteArray::fromBase64(s); return QString(ba);}","link":"/2020/06/16/Qt-base64/"},{"title":"qt 拖拽","text":"https://www.jianshu.com/p/81107b962387 https://www.devbean.net/2013/05/qt-study-road-2-dnd/ http://blog.sina.com.cn/s/blog_4a33cfca0100dckg.html","link":"/2020/06/17/Qt-drag-drop/"},{"title":"Qt include dylib on macOS","text":"项目中都是通过 动态库 的方式来组合模块的,debug模式下没有啥问题，因为IDE给处理了很多东西,但是在release模式下，打包出来的应用就有问题了。其中涉及到可执行程序引用dylib ,dylib 之间的相互引用 参看依赖 12// path/file 你自己要查看文件的路径otool -L /path/file 一种是修改动态库之间的引用b.dylib 里面引用到 a.dylib 1install_name_tool -change a.dylib @executable_path/path/a.dylib b.dylib 可执行程序引用动态库 1install_name_tool -change &quot;a.dylib&quot; &quot;@rpath/a.dylib&quot; /path/exec 其中 @executable_path 和 @rpath 还有 @loader_path 网上有不少说明，具体的就不再这里介绍了，有兴趣的可以自己去搜索看看。 如果不知道要那个库的连接，直接双击运行程序，看看提示的image not found信息是嘛，也就大概知道了。 关于Qt在Mac上的打包相关的内容，博客上也有，参考 Qt-macOS相关的内容，由于涉及到的情况还算复杂一点，基本上我遇到的问题都得到了很好的解决，有需要的可以查看一下。 参考 https://forum.qt.io/topic/59209/solved-osx-deployment-fatal-error-with-dylib-library-not-loaded-image-not-found https://www.jianshu.com/p/5bf7795db50d","link":"/2020/06/17/Qt-dylib/"},{"title":"Qt 单一应用","text":"https://stackoverflow.com/questions/5006547/qt-best-practice-for-a-single-instance-app-protection","link":"/2020/06/17/Qt-set-single-instance-app/"},{"title":"Qt-macOS","text":"macOS 打包Qt 工程的问题 https://doc.qt.io/archives/qt-4.8/deployment-mac.html https://blog.csdn.net/robert_cysy/article/details/93979746 https://www.cnblogs.com/andrewwang/p/8536239.html https://blog.inventic.eu/2012/08/how-to-deploy-qt-application-on-macos-part-ii/ https://codejamming.org/2018/deploy-to-macos https://stackoverflow.com/questions/9061354/deploying-qt-frameworks-with-mac-app-and-usage-of-otool https://stackoverflow.com/questions/33333628/how-can-i-bundle-a-dylib-within-a-mac-app-bundle-in-qt https://stackoverflow.com/questions/20909341/what-is-the-fastest-easiest-way-step-by-step-from-the-beginning-to-code-si/20918932#20918932 https://blog.csdn.net/liuyez123/article/details/50462637 https://www.qt.io/blog/2012/04/03/how-to-publish-qt-applications-in-the-mac-app-store-2 https://doc.qt.io/archives/qt-5.11/osx-deployment.html macOS 动态库 问题 https://www.jianshu.com/p/7f1b50b502d3 https://www.suninf.net/2015/06/xcode-build-and-paths-config.html 如果可以的话，还是使用静态库来的省心 https://blog.csdn.net/qq_25188995/article/details/81568491 Qt 生成 Xcode 工程 https://blog.csdn.net/luoyayun361/article/details/79435216 Qt macOS 应用图标 https://cheenwe.cn/2016-10-17/qt-deploy/ https://zhuanlan.zhihu.com/p/75147002 https://pjw.io/articles/2013/06/19/add-icon-for-qt-app-in-mac-os-x/ https://www.qt.io/blog/2012/04/03/how-to-publish-qt-applications-in-the-mac-app-store-2 https://doc.qt.io/qt-5/ios-platform-notes.html https://doc.qt.io/archives/qt-4.8/mac-differences.html#translating-the-application-menu-and-native-dialogs 签名签名之前运行 macdeployqt xxx.app http://www.dafscollaborative.org/macuidev.html http://www.ruanyifeng.com/blog/2019/08/xargs-tutorial.html https://successfulsoftware.net/2012/08/30/how-to-sign-your-mac-os-x-app-for-gatekeeper/ https://nixwang.com/2015/01/07/sign-your-mac-app-with-developer-id/ dSYM https://stackoverflow.com/questions/9371553/qt-mac-dsym-file-for-a-release-build https://www.qt.io/blog/2012/04/03/how-to-publish-qt-applications-in-the-mac-app-store-2 https://doc.qt.io/archives/qt-4.8/mac-differences.html#translating-the-application-menu-and-native-dialogs Url scheme With Qt https://blog.csdn.net/weixin_43855938/article/details/88837075 https://stackoverflow.com/questions/6561661/url-scheme-qt-and-mac http://burnttoys.blogspot.com/2008/07/adding-url-scheme-to-qt-application.html https://stackoverflow.com/questions/28822086/best-way-to-get-source-url-of-custom-ios-scheme-in-qml Qt Notification for macOS https://wiki.qt.io/How_to_use_OS_X_Notification_Center https://stackoverflow.com/questions/18898725/sending-a-message-to-mountain-lion-notification-centre-with-core-foundation Qt macOS 资源文件 https://wiki.qt.io/Resource_files_in_OS_X_bundle Qt macOS 国际化 https://doc.qt.io/qt-5/macos-issues.html#translating-the-application-menu-and-native-dialogs https://forum.qt.io/topic/72977/mac-os-how-to-localize-the-application-menu-entry/5 Qt 多语言自动化脚本 https://cloud.tencent.com/developer/article/1463205 Qt 上调用 AppDelegate https://www.cnblogs.com/xinghebuluo/p/4857190.html Qt 和 cocoa 混合开发 https://el-tramo.be/blog/mixing-cocoa-and-qt/ xcode 编译QT https://www.jianshu.com/p/8db4e75b8041","link":"/2020/06/16/Qt-macOS/"},{"title":"Qt sqlite dirver not load","text":"https://blog.csdn.net/guoxiaoqian8028/article/details/29857669 http://www.voidcn.com/article/p-kmgxdghu-bmn.html","link":"/2020/06/17/Qt-sqlite-dirver-not-load/"},{"title":"Qt ssl error","text":"Qt 5.14.2 Ubutun 16.04.6 运行时报错ssl相关类似下面这样的报错信息 123456789101112131415161718192021222324qt.network.ssl: QSslSocket: cannot resolve CRYPTO_num_locksqt.network.ssl: QSslSocket: cannot resolve CRYPTO_set_id_callbackqt.network.ssl: QSslSocket: cannot resolve CRYPTO_set_locking_callbackqt.network.ssl: QSslSocket: cannot resolve ERR_free_stringsqt.network.ssl: QSslSocket: cannot resolve EVP_CIPHER_CTX_cleanupqt.network.ssl: QSslSocket: cannot resolve EVP_CIPHER_CTX_initqt.network.ssl: QSslSocket: cannot resolve sk_new_nullqt.network.ssl: QSslSocket: cannot resolve sk_pushqt.network.ssl: QSslSocket: cannot resolve sk_freeqt.network.ssl: QSslSocket: cannot resolve sk_numqt.network.ssl: QSslSocket: cannot resolve sk_pop_freeqt.network.ssl: QSslSocket: cannot resolve sk_valueqt.network.ssl: QSslSocket: cannot resolve SSL_library_initqt.network.ssl: QSslSocket: cannot resolve SSL_load_error_stringsqt.network.ssl: QSslSocket: cannot resolve SSL_get_ex_new_indexqt.network.ssl: QSslSocket: cannot resolve SSLv3_client_methodqt.network.ssl: QSslSocket: cannot resolve SSLv23_client_methodqt.network.ssl: QSslSocket: cannot resolve SSLv3_server_methodqt.network.ssl: QSslSocket: cannot resolve SSLv23_server_methodqt.network.ssl: QSslSocket: cannot resolve X509_STORE_CTX_get_chainqt.network.ssl: QSslSocket: cannot resolve OPENSSL_add_all_algorithms_noconfqt.network.ssl: QSslSocket: cannot resolve OPENSSL_add_all_algorithms_confqt.network.ssl: QSslSocket: cannot resolve SSLeayqt.network.ssl: Incompatible version of OpenSSL 自己下载 openssl 编译一遍 然后复制到qt 的库引用位置就行为了明确引用版本 在项目里 执行 1qDebug() &lt;&lt; QSslSocket::supportsSsl() &lt;&lt; QSslSocket::sslLibraryBuildVersionString() &lt;&lt; QSslSocket::sslLibraryVersionString(); 我自己的环境运行结果如下 1true &quot;OpenSSL 1.1.1d 10 Sep 2019&quot; &quot;OpenSSL 1.1.1h-dev xx XXX xxxx&quot; 查看一下需要引用的版本，我使用的Qt 5.14.2 使用的是 1.1.1 的版本 在 GitHub上找到 openssl ,clone 到本地，找到需要的分支，比如我的需要的分支是 OpenSSL_1_1_1-stable，切换到这个分支 1git checkout -b openssl1.1.1 origin/OpenSSL_1_1_1-stable 然后编译 12./config enable-sharedmake -j4 然后在把编译后生成的lib 拷贝到 qt 引用目录 1cp libssl.so* libcrypto.so* ~/Qt5.14.2/5.14.2/gcc_64/lib/ -a 注意后面要换成你机器上安装Qt的目录 再次编译项目就可以了就没有报错了 参考 https://blog.csdn.net/u010168781/article/details/85632637 https://bugreports.qt.io/browse/QTBUG-68156?focusedCommentId=424062&amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel https://www.tal.org/tutorials/openssl_1_1_1_and_qt_5_12_4 https://www.cnblogs.com/cute/p/12617952.html https://github.com/openssl/openssl","link":"/2020/06/29/Qt-ssl-error/"},{"title":"VS编译 D8000 错误","text":"今天遇到一个问题，编译项目报错 cl: 命令行 error D8000 经过一番搜索找到了问题原因，回想起来是之前一直在切换系统语言。可能导致一些开发包没有安装上。我的问题是没有安装英文版的VS语言包。 参考 https://blog.csdn.net/Bug_Gee/article/details/103629346","link":"/2020/04/17/VS%E7%BC%96%E8%AF%91-D8000-%E9%94%99%E8%AF%AF/"},{"title":"Qt 相关资料","text":"最近一段时间一直在mac上做客户端开发，自己整理了一些初学Qt的资料。 Qt 安装 http://download.qt.io/ 部分中文文档 http://www.kuqin.com/qtdocument/index.html https://qtguide.ustclug.org/ C++ lambda https://www.cnblogs.com/pzhfei/archive/2013/01/14/lambda_expression.html https://www.jianshu.com/p/923d11151027 源码 https://git.merproject.org/mer-core/qtbase Qt 线程和信号槽的应用解释 https://blog.csdn.net/lutx/article/details/7353957 https://www.devbean.net/2013/12/qt-study-road-2-thread-and-qobject/ HTTP Status Code https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml blog 资料 https://zhuanlan.zhihu.com/llfqt","link":"/2020/04/16/Qt-%E7%9B%B8%E5%85%B3%E8%B5%84%E6%96%99/"},{"title":"WebView Debugger for macOS","text":"mac 上调试应用的 Webview 界面开启方式safari 开启 Preferences -&gt; Advanced -&gt;Show Develop menu in menu bar 运行方式Debug 模式下直接就能显示出来，选中就可以开始调试了。 但是在 Release 模式下，比如给前端开发的测试包，就没法使用了。在 Xcode 工程中的 LenovoBox.entitlements 文件中添加下面两行 12&lt;key&gt;com.apple.security.get-task-allow&lt;/key&gt; &lt;true/&gt;","link":"/2018/12/21/WebView-Debugger-for-macOS/"},{"title":"一个WebView的循环引用问题","text":"macOS WebView JSToNative项目里通过使用的是WebView 并且通过 - (void)webView:(WebView *)webView windowScriptObjectAvailable:(WebScriptObject *)windowScriptObject 这个方法实现JS到Native的通信。 项目中代码如下: 123456self.mainWebView.frameLoadDelegate = self;# pragma mark - WebFrameLoadDelegate- (void)webView:(WebView *)webView windowScriptObjectAvailable:(WebScriptObject *)windowScriptObject { [windowScriptObject setValue:self forKey:@\"jsToNative\"];} 这样会形成循环引用，self =&gt; self.mainWebView =&gt; self.mainWebView. windowScriptObject =&gt; self 可以如下修改解决问题： 123456self.jsToNativeObject = [[JSToNativeObject alloc] initWithDelegate:self];# pragma mark - WebFrameLoadDelegate- (void)webView:(WebView *)webView windowScriptObjectAvailable:(WebScriptObject *)windowScriptObject { [windowScriptObject setValue:self.jsToNativeObject forKey:@\"jsToNative\"];} JSToNativeObject.h 1234567@interface JSToNativeObject : NSObject- (instancetype)initWithDelegate:(id&lt;JSToNativeWebViewProtocol&gt;)delegate;@property (nonatomic,weak,readonly) id&lt;JSToNativeWebViewProtocol&gt;delegate;@end JSToNativeObject.m 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647- (instancetype)initWithDelegate:(id&lt;JSToNativeWebViewProtocol&gt;)delegate { self = [super init]; if (self) { self.delegate = delegate; } return self;}- (id)invokeDefaultMethodWithArguments:(NSArray *)arguments { if (arguments.count &lt; 2) { return nil; } NSString *methodStr = arguments[0]; NSString *paramsStr = arguments[1]; SEL sel; if ([methodStr isEqualToString:@\"xxxxxx\"]) { sel = @selector(xxxxxx:); }else { sel = nil; } return [self handleSelector:sel withObject: paramsStr];}- (id)handleSelector:(SEL)aSelector withObject:(NSDictionary *)params { if (aSelector != nil) { if ([self.delegate respondsToSelector:aSelector]) { // 方法签名(方法的描述) NSMethodSignature *signature = [[self.delegate class] instanceMethodSignatureForSelector:aSelector]; if (signature == nil) { NSLog(@\"方法签名不存在\"); //可以抛出异常也可以不操作。 }# pragma clang diagnostic push# pragma clang diagnostic ignored \"-Warc-performSelector-leaks\" id obj = [self.delegate performSelector:aSelector withObject:params];# pragma clang diagnostic pop /// 有返回值类型，才去获得返回值 void v objc @ if (signature.methodReturnLength) { return obj; } } } return nil;} 改进版上面的代码有崩溃问题，原因见 performSelector 那\b篇 123456789101112131415161718192021222324252627282930- (id)handleSelector:(SEL)aSelector withObject:(NSDictionary *)params { if (aSelector != nil) { if ([self.delegate respondsToSelector:aSelector]) { // 方法签名(方法的描述) NSMethodSignature *signature = [[self.delegate class] instanceMethodSignatureForSelector:aSelector]; if (signature == nil) { NSLog(@\"方法签名不存在\"); //可以抛出异常也可以不操作。 return nil; } if (params == nil) { params = @{}; }#pragma clang diagnostic push#pragma clang diagnostic ignored \"-Warc-performSelector-leaks\" // id obj = [self.delegate performSelector:aSelector withObject:params]; /// 有返回值类型，才去获得返回值 void v objc @ if (signature.methodReturnLength &gt; 0) { return [self.delegate performSelector:aSelector withObject:params]; }else { [self.delegate performSelector:aSelector withObject:params]; }#pragma clang diagnostic pop } } return nil;} 升级版可以接受并处理多个参数,区分有无返回值 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253- (id)handleSelector:(SEL)aSelector withObject:(NSDictionary *)params { if (aSelector != nil) { if ([self.delegate respondsToSelector:aSelector]) { // 方法签名(方法的描述) NSMethodSignature *signature = [[self.delegate class] instanceMethodSignatureForSelector:aSelector]; if (signature == nil) { NSLog(@\"方法签名不存在\"); return nil; } if (params == nil) { params = @{}; } // NSInvocation : 利用一个NSInvocation对象包装一次方法调用（方法调用者、方法名、方法参数、方法返回值） NSInvocation *invocation = [NSInvocation invocationWithMethodSignature:signature]; invocation.target = self.delegate; invocation.selector = aSelector; self.objects = @[params]; // 设置参数 NSInteger paramsCount = signature.numberOfArguments - 2; // 除self、_cmd以外的参数个数 paramsCount = MIN(paramsCount, self.objects.count); for (NSInteger i = 0; i &lt; paramsCount; i++) { id object = self.objects[i]; if ([object isKindOfClass:[NSNull class]]) continue; [invocation setArgument:&amp;object atIndex:i + 2]; } // 调用方法 [invocation invoke]; // 获取返回值 void *result = NULL; if (signature.methodReturnLength) { // 有返回值类型，才去获得返回值 [invocation getReturnValue:&amp;result]; } if (result == NULL) { return nil; } id returnValue; // 提前释放问题 returnValue = (__bridge id)result; return returnValue; } } return nil;} 方法废弃问题是解决了，但是上面的web view 的- (void)webView:(WebView *)webView windowScriptObjectAvailable:(WebScriptObject *)windowScriptObject已经废弃了 官方推荐使用 - (void)webView:(WebView *)webView didClearWindowObject:(WebScriptObject *)windowObject forFrame:(WebFrame *)frame;又但是 WebView 官方也不推荐使用了支持到10.14了，让大家使用 WKWebView (WK_EXTERN API_AVAILABLE(macosx(10.10), ios(8.0)))。另推荐使用 JavaScriptCore","link":"/2018/12/17/WebView-WebScriptObject/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/1970/01/01/hello-world/"},{"title":"performSelector","text":"performSelector 的一些问题代码 123456789101112- (void)methodNoReturnAndArgument { NSLog(@\"%@\",NSStringFromSelector(_cmd));}- (void)methodNoReturnWithArgument:(id)obj { NSLog(@\"argument:%@\",obj); NSLog(@\"%@\",NSStringFromSelector(_cmd));}- (id)methodReturnWithArgument:(id)obj { NSLog(@\"argument:%@\",obj); NSLog(@\"return:%@\",obj); return obj;} 123456789101112131415161718192021222324252627282930 SEL sel1 = @selector(methodNoReturnAndArgument); SEL sel2 = @selector(methodNoReturnWithArgument:); SEL sel3 = @selector(methodReturnWithArgument:); id obj1 = @\"1\"; id obj2 = @\"2\"; id obj3 = @\"3\"; id ret1; id ret2; id ret3; void *a; [self performSelector:sel1]; [self performSelector:sel1 withObject:nil]; [self performSelector:sel1 withObject:obj1];// ret1 = [self performSelector:sel1 withObject:obj1]; // 崩溃 /// 接受参数错误 /// 下面这行转换就没有问题 a = (__bridge void *)[self performSelector:sel1 withObject:obj1]; // [self performSelector:sel2]; // 崩溃 /// 有参数去没有传 [self performSelector:sel2 withObject:nil]; // ret2 = [self performSelector:sel2 withObject:nil]; // 崩溃 /// 接受参数错误 ret2 = [self performSelector:sel2 withObject:obj2]; // [self performSelector:sel3]; // 崩溃 [self performSelector:sel3 withObject:nil]; ret3 = [self performSelector:sel3 withObject:nil]; ret3 = [self performSelector:sel3 withObject:obj3];","link":"/2018/12/21/performSelector/"},{"title":"音视频文件下载测试","text":"http://samples.mplayerhq.hu/","link":"/2020/06/17/video-file-download-test/"},{"title":"Qt Ubuntu 运行报错","text":"近期迁移到 ubuntu 上做开发支持，系统版本是 16.04.6 编译项目报错 /usr/bin/ld: cannot find -lGL 讲过查找是缺少 libGL.so 库 先本地查找一下 sudo find / | grep &quot;libGL.so&quot; 12/usr/lib/x86_64-linux-gnu/mesa/libGL.so.1.2.0/usr/lib/x86_64-linux-gnu/mesa/libGL.so.1 找到后 弄个链接到 usr/lib 下 sudo ln -s /usr/lib/x86_64-linux-gnu/mesa/libGL.so.1.2.0 /usr/lib/libGL.so 如果本地没有查到 libGL.so 可以先下载 sudo apt-get install libgl1-mesa-dev 然后再弄链接","link":"/2020/06/29/Qt-Ubuntu-run-error/"},{"title":"Codesing &amp; Notarize app on macOS","text":"Codesign可用签名证书查询 security find-identity -v -p codesigning签名 codesign -s &apos;Name of the certificate’ /path/Example.app重新签名 codesign -f -s &apos;Name of the certificate&apos; /path/Example.app应用签名信息 codesign -vv -d Example.app应用签名认证 codesign --verify Example.app没有任何输出代表签名是完好的 应用可用验证 spctl -a -v Example.appNotarization Apple 新认证方式 Bundle ID 应用bundle ID Username Apple ID Password Apple ID 密码 是一个一次性的密码 FilePath 要认证的包 一般是dmg 或者 zip .app 的不行 Team ID 开发者账号所在的 Team ID 登录到开发者账号 资料里面查看 校验 xcrun altool --notarize-app --primary-bundle-id “Bundle ID&quot; --username “Username&quot; --password “Password&quot; --file FilePath -itc_provider &quot;Team ID&quot;上面的执行完成后会生成 RequestUUID 使用下面的方法查看即可 查询 邮件中 ID xcrun altool --notarization-info RequestUUID -u “Username --password “Password&quot;查到认证通过后需要重新签名一下安装包 重新签一下 xcrun stapler staple “FilePath&quot;stapler validate will do this - 123$ stapler validate myfile.pkg Processing: myfile.pkgThe validate action worked! If The validate action worked! is printed, the specified pkg file is notarized. If does not have a ticket stapled to it. is printed, the specified pkg file is either not notarized, or the notarization was never followed up with the stapling step. 检查公证结果脚本NotarizationScript.sh 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172# 公证的 bundle idBUNDLE_ID=&quot;xxx&quot;# apple idUSERNAME=&quot;xxx&quot;# 这里不是apple账号的密码，而是生成的app密匙PASSWORD=&quot;xxxx&quot;#team idPROVIDER=&quot;xxxx&quot;filePath=$1# 公证func 传入文件路径为参数function uploadFileAndNotarized(){ echo &quot;start notarized $filePath ...&quot; #上传安装包到苹果服务器进行认证，输出结果到upload_log.txt xcrun altool --notarize-app --primary-bundle-id &quot;$BUNDLE_ID&quot; --username &quot;$USERNAME&quot; --password &quot;$PASSWORD&quot; --file $filePath -itc_provider &quot;$PROVIDER&quot; &amp;&gt; upload_result # 从日志文件中读取UUID,并隔一段时间检查一次公证结果 # 只有成功的格式是 RequestUUID = uuid=`cat upload_result | grep -Eo 'RequestUUID = [[:alnum:]]{8}-([[:alnum:]]{4}-){3}[[:alnum:]]{12}' | grep -Eo '[[:alnum:]]{8}-([[:alnum:]]{4}-){3}[[:alnum:]]{12}' | sed -n &quot;1p&quot;` # 如果上传过了，则会返回 The upload ID is if [[ &quot;$uuid&quot; == &quot;&quot; ]];then uuid=`cat upload_result | grep -Eo 'The upload ID is [[:alnum:]]{8}-([[:alnum:]]{4}-){3}[[:alnum:]]{12}' | grep -Eo '[[:alnum:]]{8}-([[:alnum:]]{4}-){3}[[:alnum:]]{12}' | sed -n &quot;1p&quot;` echo &quot;The software asset has already been uploaded. The upload ID is $uuid&quot; fi echo &quot;notarization UUID is $uuid&quot; # 即没有上传成功，也没有上传过，则退出 if [[ &quot;$uuid&quot; == &quot;&quot; ]]; then echo &quot;No success no uploaded, unknown error&quot; cat upload_result | awk 'END {print}' return 1 fi while true; do echo &quot;checking for notarization...&quot; #通过RequestUUID查询服务器工作状态，输出结果到check_status.txt xcrun altool --notarization-info &quot;$uuid&quot; --username &quot;$USERNAME&quot; --password &quot;$PASSWORD&quot; &amp;&gt; check_status checkResult=`cat check_status` t=`echo &quot;$checkResult&quot; | grep &quot;success&quot;` f=`echo &quot;$checkResult&quot; | grep &quot;invalid&quot;` if [[ &quot;$t&quot; != &quot;&quot; ]]; then echo &quot;notarization done!&quot; echo $checkResult echo &quot;do staple $filePath&quot; xcrun stapler staple $filePath &amp;&gt; stapler_result echo `cat stapler_result` echo &quot;stapler done!&quot; break fi if [[ &quot;$f&quot; != &quot;&quot; ]]; then echo &quot;Failed : $checkResult&quot; return 1 fi echo &quot;not finish yet, sleep 1min then check again...&quot; sleep 60 done return 0}uploadFileAndNotarized $filePath 保存文件 直接调用传入本地包路径即可 sh NotarizationScript.sh filepath 参考 https://www.logcg.com/archives/3222.html https://antscript.com/post/2019-10-08-notarizing-mac-app/ https://blog.csdn.net/lovechris00/article/details/102309757 https://developer.apple.com/documentation/xcode/notarizing_your_app_before_distribution?language=objc https://help.apple.com/xcode/mac/current/#/dev88332a81e https://help.apple.com/xcode/mac/current/#/dev033e997ca https://developer.apple.com/developer-id/ https://blog.csdn.net/shengpeng3344/article/details/103369804 https://scriptingosx.com/2019/09/notarize-a-command-line-tool/ https://github.com/CaicaiNo/Apple-Mac-Notarized-script/blob/master/Apple-Mac-Notarized-script.sh https://blog.csdn.net/ftpleopard/article/details/102721138","link":"/2021/01/19/Codesing-Notarize-app-on-macOS/"},{"title":"AppleScript 获取应用路径","text":"12345678910111213on getAppPath(AppName) try set launchServicesPath to &quot;/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/Support/lsregister&quot; -- get the path to all executables in the Launch Service Registry that contain that appName set appPaths to paragraphs of (do shell script launchServicesPath &amp; &quot; -dump | grep --only-matching \\&quot;/.*\\\\&quot; &amp; AppName &amp; &quot;\\&quot;&quot;) log appPaths return appPaths on error return &quot;NOT INSTALLED&quot; end tryend getAppPath 参考: https://www.satimage.fr/software/en/smile/external_codes/file_paths.html","link":"/2021/01/19/AppleScript-%E8%8E%B7%E5%8F%96%E5%BA%94%E7%94%A8%E8%B7%AF%E5%BE%84/"},{"title":"Qt Windows 窗口去掉右上角问号","text":"在 Widget 中 加上 1this-&gt;setWindowFlags(windowFlags()&amp;~Qt::WindowContextHelpButtonHint);","link":"/2021/01/19/Qt-Windows-%E7%AA%97%E5%8F%A3%E5%8E%BB%E6%8E%89%E5%8F%B3%E4%B8%8A%E8%A7%92%E9%97%AE%E5%8F%B7/"},{"title":"Qt cpp文件 编码报错","text":"之前在写Qt程序的时候，如果在原文件中的字符串直接写中文，例如有些地方需要弹出错误或者警告的对话框提示，那么提示内容就是中文信息，我发现有部分字符会出现乱码，并且有时候编译的时候会报错：error C2001: 常量中有换行符这一般是编码问题 我是这么解决的，在包含中文(即使是注释中有中文有时候也报错)的源文件的开头加入 #pragma execution_character_set(&quot;utf-8&quot;) 这一行指定文件的编码，同时使用UE编辑器打开该文件，另存为UTF-8的编码，在QtCreator中重新打开即可。","link":"/2021/01/19/Qt-cpp%E6%96%87%E4%BB%B6-%E7%BC%96%E7%A0%81%E6%8A%A5%E9%94%99/"},{"title":"XCTest","text":"异步处理异步事件 XCTestExpectation 12345678910111213XCTestExpectation* exception = [self expectationWithDescription:@&quot;metadata&quot;];NetWrok *req = [NetWrok new] ;[req startWithCompletionBlockWithSuccess:^(LDBaseRequest *request) { [exception fulfill];} failure:^(LDBaseRequest *request) { XCTAssertNil(request.error); [exception fulfill];}];[self waitForExpectationsWithTimeout:50 handler:^(NSError * _Nullable error) { XCTAssertNil(error);}]; 参考 https://nshipster.com/xctestcase/ https://www.jianshu.com/p/d405a9ca53fe http://blog.kumaya.co/2014/07/10/xctest-assertions/","link":"/2021/01/19/XCTest/"},{"title":"git remove submodules","text":"path/name 就是本地引入的 submodule 的路径，可以使用git submodule 来查看本地路径 依次执行以下命令，来删除本地引用的submodule 1. git submodule deinit -f -- path/name 2. rm -rf .git/modules/path/name 3. git rm -f path/name 4. git rm --cached path/name","link":"/2021/01/19/git-remove-submodules/"},{"title":"pkg文件静默安装","text":"sudo installer -store -pkg /User/MyName/Desktop/helloWorld.pkg -target /","link":"/2021/01/19/pkg%E6%96%87%E4%BB%B6%E9%9D%99%E9%BB%98%E5%AE%89%E8%A3%85/"},{"title":"制作ico文件","text":"https://runbing.me/archives/create-favicon-with-icontool-from-icoutils.html","link":"/2021/01/19/%E5%88%B6%E4%BD%9Cico%E6%96%87%E4%BB%B6/"},{"title":"Qt for linux","text":"打包 https://doc.qt.io/qt-5/linux-deployment.html https://forum.qt.io/topic/88727/gnu-linux-set-path-to-shared-libraries https://stackoverflow.com/questions/41674425/how-to-deploy-qt-applications-for-linux","link":"/2021/01/19/Qt-for-linux/"},{"title":"Qt 显示语言切换","text":"核心操作就是通过 QTranslator 加载对应的国际化文件调用 installTranslator 改变当前显示语言 #ifndef QT_NO_TRANSLATION static bool installTranslator(QTranslator * messageFile); static bool removeTranslator(QTranslator * messageFile); #endif系统有个系统事件 void MyWidget::changeEvent(QEvent *event) { if (event-&gt;type() == QEvent::LanguageChange) { titleLabel-&gt;setText(tr(&quot;Document Title&quot;)); ... } else QWidget::changeEvent(event); }可以处理显示语言变化的消息 Qt提供的翻译在 Qt安装目录下 /translations 文件夹内 ,直接加到工程资源中就行 参考 https://wiki.qt.io/How_to_create_a_multi_language_application https://doc.qt.io/qt-5/internationalization.html https://doc.qt.io/qt-5/qtranslator.html https://doc.qt.io/qt-5/qlocale.html https://stackoverflow.com/questions/36345709/qlocalelanguage-traditional-and-simplified-chinese","link":"/2021/01/19/Qt-%E6%98%BE%E7%A4%BA%E8%AF%AD%E8%A8%80%E5%88%87%E6%8D%A2/"},{"title":"macOS获取系统代理","text":"123456789101112131415161718192021CFDictionaryRef proxies = SCDynamicStoreCopyProxies(NULL);if (proxies) { NSDictionary *dict = [NSDictionary dictionaryWithDictionary:(__bridge NSDictionary *)proxies]; CFNumberRef hpEnableRef = CFDictionaryGetValue(proxies, kSCPropNetProxiesHTTPEnable); NSNumber *enable = (__bridge NSNumber *)hpEnableRef; if (enable) { // host CFStringRef hpURLRef = (CFStringRef)CFDictionaryGetValue(proxies,kSCPropNetProxiesHTTPProxy); // port CFNumberRef hpPortRef = CFDictionaryGetValue(proxies, kSCPropNetProxiesHTTPPort); if (hpURLRef) { NSNumber *port = (__bridge NSNumber *)hpPortRef; NSString *url = (__bridge NSString *)hpURLRef; NSString *pUrl = [NSString stringWithFormat:@&quot;http://%@:%@&quot;,url,port]; self.proxyServer = pUrl; } } CFRelease(proxies);} 参考 System Configuration","link":"/2021/06/08/macOS%E8%8E%B7%E5%8F%96%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%90%86/"},{"title":"macOS 在Main Menu显示已经打开的Window","text":"这个设置是默认的设置 NSWindow 属性 excludedFromWindowsMenu 设置为NO,默认就是NO 设置Window的tittle，没有title不会显示到menu上 参考 苹果文档","link":"/2021/06/08/macOS-%E5%9C%A8Main-Menu%E6%98%BE%E7%A4%BA%E5%B7%B2%E7%BB%8F%E6%89%93%E5%BC%80%E7%9A%84Window/"}],"tags":[{"name":"WebView","slug":"WebView","link":"/tags/WebView/"},{"name":"Go","slug":"Go","link":"/tags/Go/"},{"name":"macOS","slug":"macOS","link":"/tags/macOS/"},{"name":"iOS","slug":"iOS","link":"/tags/iOS/"},{"name":"ATS","slug":"ATS","link":"/tags/ATS/"},{"name":"NSOutlineView","slug":"NSOutlineView","link":"/tags/NSOutlineView/"},{"name":"Qt","slug":"Qt","link":"/tags/Qt/"},{"name":"vs","slug":"vs","link":"/tags/vs/"},{"name":"windows","slug":"windows","link":"/tags/windows/"},{"name":"cocoa","slug":"cocoa","link":"/tags/cocoa/"},{"name":"Safari","slug":"Safari","link":"/tags/Safari/"},{"name":"performSelector","slug":"performSelector","link":"/tags/performSelector/"},{"name":"git","slug":"git","link":"/tags/git/"}],"categories":[{"name":"life","slug":"life","link":"/categories/life/"},{"name":"technology","slug":"technology","link":"/categories/technology/"}]}